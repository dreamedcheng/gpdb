-- This test is used to test if waiting on a resource queue lock will
-- trigger a local deadlock detection.

!\retcode gpconfig -c gp_autostats_mode -v ON_NO_STATS;
-- start_ignore
20201207:15:15:18:026497 gpconfig:chengwen:gpuser-[INFO]:-completed successfully with parameters '-c gp_autostats_mode -v ON_NO_STATS'

-- end_ignore
(exited with code 0)
!\retcode gpstop -u 
-- We need gp_autostats_mode to be ON_NO_STATS in this test.
0: SHOW gp_autostats_mode;
-- start_ignore
20201207:15:15:18:026755 gpstop:chengwen:gpuser-[INFO]:-Starting gpstop with args: -u
20201207:15:15:18:026755 gpstop:chengwen:gpuser-[INFO]:-Gathering information and validating the environment...
20201207:15:15:18:026755 gpstop:chengwen:gpuser-[INFO]:-Obtaining Greenplum Master catalog information
20201207:15:15:18:026755 gpstop:chengwen:gpuser-[INFO]:-Obtaining Segment details from master...
20201207:15:15:18:026755 gpstop:chengwen:gpuser-[INFO]:-Greenplum Version: 'postgres (Greenplum Database) 7.0.0-alpha.0+dev.14104.g8218f2d build dev'
20201207:15:15:18:026755 gpstop:chengwen:gpuser-[INFO]:-Signalling all postmaster processes to reload
/bin/sh: line 1: 0:: command not found

-- end_ignore
(exited with code 127)

0: CREATE RESOURCE QUEUE rq_deadlock_test WITH (active_statements = 1);
CREATE
0: CREATE role role_deadlock_test RESOURCE QUEUE rq_deadlock_test;
CREATE

0: SELECT gp_inject_fault_infinite('before_auto_stats', 'suspend', dbid) FROM gp_segment_configuration WHERE content = -1 AND role = 'p';
 gp_inject_fault_infinite 
--------------------------
 Success:                 
(1 row)
0&: SELECT gp_wait_until_triggered_fault('before_auto_stats', 1, dbid) FROM gp_segment_configuration WHERE content = -1 AND role = 'p';  <waiting ...>

1: SET role role_deadlock_test;
SET
1: CREATE TABLE t_deadlock_test(c1 int);
CREATE
1&: INSERT INTO t_deadlock_test VALUES (1);  <waiting ...>
2: SET role role_deadlock_test;
SET
2: BEGIN;
BEGIN
2: analyze t_deadlock_test;
ANALYZE
0<:  <... completed>
 gp_wait_until_triggered_fault 
-------------------------------
 Success:                      
(1 row)
0: select gp_inject_fault_infinite('before_auto_stats', 'reset', dbid) from gp_segment_configuration where content = -1 and role = 'p';
 gp_inject_fault_infinite 
--------------------------
 Success:                 
(1 row)
2: SELECT * FROM t_deadlock_test;
ERROR:  deadlock detected
DETAIL:  Process 26804 waits for ExclusiveLock on resource queue 57544; blocked by process 26795.
Process 26795 waits for ShareUpdateExclusiveLock on relation 57546 of database 57503; blocked by process 26804.
HINT:  See server log for query details.
2: ROLLBACK;
ROLLBACK
1<:  <... completed>
INSERT 1

-- Clean up the test
0: DROP TABLE t_deadlock_test;
DROP
0: DROP ROLE role_deadlock_test;
DROP
0: DROP RESOURCE QUEUE rq_deadlock_test;
DROP
